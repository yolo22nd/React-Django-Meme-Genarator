{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\React Django Meme Genarator\\\\React-Django-Meme-Genarator\\\\Frontend\\\\src\\\\pages\\\\Memepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport AuthContext from '../context/AuthContext';\nimport NestedGrid from '../components/NestedGrid';\nimport Header from '../components/Header';\nimport SaveBanner from '../components/SaveBanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://api.imgflip.com/get_memes\";\nconst Memepage = () => {\n  _s();\n  const location = useLocation();\n  let [memes, setMemes] = useState([]);\n  let [saved, setSaved] = useState(false);\n  let {\n    authTokens,\n    logOutUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    var _location$state;\n    getMemes();\n    setSaved((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.saved);\n    console.log(\"saved\");\n  }, []);\n  let getMemes = async () => {\n    console.log(\"fetching response\");\n    let response = await fetch(baseURL);\n    console.log(\"response fetched\");\n    if (response.status === 200) {\n      let data = await response.json();\n      console.log(\"data set\");\n      console.log(data);\n      setMemes(data.data.memes);\n      console.log('memes set');\n    } else if (response.statusText === 'Unauthorized') {\n      logOutUser();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), saved && /*#__PURE__*/_jsxDEV(SaveBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NestedGrid, {\n        memes: memes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Memepage, \"MxJODLGBuKvVBr9OrZy0rP83rJM=\", false, function () {\n  return [useLocation];\n});\n_c = Memepage;\nexport default Memepage;\nvar _c;\n$RefreshReg$(_c, \"Memepage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","AuthContext","NestedGrid","Header","SaveBanner","jsxDEV","_jsxDEV","Fragment","_Fragment","baseURL","Memepage","_s","location","memes","setMemes","saved","setSaved","authTokens","logOutUser","_location$state","getMemes","state","console","log","response","fetch","status","data","json","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/React Django Meme Genarator/React-Django-Meme-Genarator/Frontend/src/pages/Memepage.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport AuthContext from '../context/AuthContext'\r\nimport NestedGrid from '../components/NestedGrid' \r\nimport Header from '../components/Header'\r\nimport SaveBanner from '../components/SaveBanner'\r\n\r\nconst baseURL = \"https://api.imgflip.com/get_memes\";\r\n\r\n\r\nconst Memepage = () => {\r\n  const location = useLocation();\r\n  \r\n  \r\n  let [memes, setMemes] = useState([])\r\n  let [saved,setSaved] = useState(false)\r\n  let {authTokens,logOutUser} = useContext(AuthContext)\r\n  \r\n  \r\n  useEffect(()=> {\r\n    getMemes()\r\n    setSaved(location.state?.saved)\r\n    console.log(\"saved\");\r\n  }, [])\r\n\r\n\r\n  let getMemes = async () => {\r\n    console.log(\"fetching response\");\r\n    let response = await fetch(baseURL);\r\n  \r\n    console.log(\"response fetched\");\r\n    if (response.status === 200) {\r\n      let data = await response.json();\r\n      console.log(\"data set\");\r\n      console.log(data);\r\n      setMemes(data.data.memes);\r\n      console.log('memes set');\r\n    } else if (response.statusText === 'Unauthorized') {\r\n      logOutUser();\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n        <Header/>\r\n        {saved && <SaveBanner/>}\r\n        <br />\r\n\r\n    <div>\r\n\r\n          <NestedGrid memes={memes}/>\r\n      \r\n    </div>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default Memepage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,OAAO,GAAG,mCAAmC;AAGnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAG9B,IAAI,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI,CAACkB,KAAK,EAACC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACtC,IAAI;IAACoB,UAAU;IAACC;EAAU,CAAC,GAAGnB,UAAU,CAACE,WAAW,CAAC;EAGrDH,SAAS,CAAC,MAAK;IAAA,IAAAqB,eAAA;IACbC,QAAQ,CAAC,CAAC;IACVJ,QAAQ,EAAAG,eAAA,GAACP,QAAQ,CAACS,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAgBJ,KAAK,CAAC;IAC/BO,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIH,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAChB,OAAO,CAAC;IAEnCa,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,IAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAChCN,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBb,QAAQ,CAACa,IAAI,CAACA,IAAI,CAACd,KAAK,CAAC;MACzBS,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,MAAM,IAAIC,QAAQ,CAACK,UAAU,KAAK,cAAc,EAAE;MACjDX,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAID,oBACEZ,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA,CAACH,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACRnB,KAAK,iBAAIT,OAAA,CAACF,UAAU;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvB5B,OAAA;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEV5B,OAAA;MAAAwB,QAAA,eAEMxB,OAAA,CAACJ,UAAU;QAACW,KAAK,EAAEA;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAAA,eACA,CAAC;AAEX,CAAC;AAAAvB,EAAA,CA/CKD,QAAQ;EAAA,QACKV,WAAW;AAAA;AAAAmC,EAAA,GADxBzB,QAAQ;AAiDd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
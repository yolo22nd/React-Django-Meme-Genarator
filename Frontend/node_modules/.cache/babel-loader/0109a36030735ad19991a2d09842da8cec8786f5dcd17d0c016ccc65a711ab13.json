{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\meme_generator\\\\src\\\\components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport { pink } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: pink,\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  '& .meme-img': {\n    maxWidth: '100%',\n    height: '250px',\n    borderRadius: '10px'\n  },\n  '& h6': {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  '& button': {\n    color: theme.palette.mode === 'dark' ? '#fff' : '#000',\n    borderColor: theme.palette.mode === 'dark' ? '#fff' : '#000'\n  }\n}));\n_c = StyledPaper;\nconst Card = ({\n  meme,\n  saved\n}) => {\n  _s();\n  const navigate = useNavigate();\n  let [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  const handleCreateMemeClick = () => {\n    saved ? navigate('/create/' + meme.id, {\n      state: {\n        meme: meme,\n        memeId: meme.id,\n        name: meme.name,\n        url: meme.url,\n        box_count: meme.box_count\n      }\n    }) : navigate();\n  };\n  return /*#__PURE__*/_jsxDEV(StyledPaper, {\n    elevation: 3,\n    onClick: handleCreateMemeClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"meme-img\",\n      src: meme.url,\n      alt: meme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: meme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), open !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Download, {\n        handleClose: handleClose,\n        url: generatedMeme,\n        open: open,\n        saved: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: console.log(\"meme genarated\")\n      }, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"wUHUiBCIPANmgmYJvjak9nbTmMc=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Card;\nexport default Card;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","Paper","Typography","Button","useNavigate","styled","pink","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledPaper","theme","padding","spacing","textAlign","color","backgroundColor","palette","mode","maxWidth","height","borderRadius","marginTop","marginBottom","borderColor","_c","Card","meme","saved","_s","navigate","open","setOpen","useState","handleClose","handleCreateMemeClick","id","state","memeId","name","url","box_count","elevation","onClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","Download","generatedMeme","console","log","_c2","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/meme_generator/src/components/Card.js"],"sourcesContent":["import React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { styled } from '@mui/system';\r\nimport { pink } from '@mui/material/colors';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\ncolor: pink,\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  '& .meme-img': {\r\n    maxWidth: '100%',\r\n    height: '250px',\r\n    borderRadius: '10px',\r\n  },\r\n  '& h6': {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  '& button': {\r\n    color: theme.palette.mode === 'dark' ? '#fff' : '#000',\r\n    borderColor: theme.palette.mode === 'dark' ? '#fff' : '#000',\r\n  },\r\n}));\r\n\r\nconst Card = ({ meme, saved }) => {\r\n  const navigate = useNavigate();\r\n  let [open, setOpen] = useState(false)\r\n\r\n  \r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n};\r\n\r\n  const handleCreateMemeClick = () => {\r\n    saved? navigate('/create/'+meme.id, { state: { meme:meme, memeId: meme.id, name: meme.name, url: meme.url, box_count: meme.box_count } })\r\n    :navigate()\r\n  };\r\n\r\n  return (\r\n    <StyledPaper elevation={3} onClick={handleCreateMemeClick}>\r\n       <img className=\"meme-img\" src={meme.url} alt={meme.name} />\r\n      \r\n      <Typography variant=\"h6\">\r\n        {meme.name}\r\n      </Typography>\r\n      {/* <Button variant=\"outlined\" onClick={handleCreateMemeClick}>\r\n        Create\r\n      </Button> */}\r\n            {open !== \"\" ?\r\n        <>\r\n        <Download handleClose={handleClose} url={generatedMeme} open={open} saved={true}/>\r\n        <>{console.log(\"meme genarated\")}</>\r\n        </>\r\n        : <></>}\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
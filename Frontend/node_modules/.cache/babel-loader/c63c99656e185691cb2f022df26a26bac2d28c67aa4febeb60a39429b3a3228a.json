{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\React Django Meme Genarator\\\\React-Django-Meme-Genarator\\\\Frontend\\\\src\\\\pages\\\\Createpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Download from \"../components/Download\";\nimport axios from 'axios';\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fonts = [{\n  value: 'impact',\n  label: 'impact'\n}, {\n  value: 'arial',\n  label: 'arial'\n}];\nfunction CreatePage() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const meme = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.meme;\n  const [generatedMeme, setGeneratedMeme] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [textBoxes, setTextBoxes] = useState({});\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  let formData = new FormData();\n  formData.append(\"template_id\", meme.id);\n  formData.append(\"username\", \"omtank22\");\n  formData.append(\"password\", \"imgflipp\");\n  const changeForm = key => event => {\n    setTextBoxes({\n      ...textBoxes,\n      [key]: event.target.value\n    });\n  };\n  const setForm = key => event => {\n    setTextBoxes({\n      ...textBoxes,\n      [key]: event.target.value\n    });\n  };\n  const generateMeme = () => {\n    // formData.set(\"font\", font);\n    for (const key in textBoxes) {\n      console.log(key, textBoxes[key]);\n      formData.append(key, textBoxes[key]);\n    }\n    createMeme(formData).then(r => {\n      if (r.success === true) {\n        setGeneratedMeme(r.data.url);\n        setOpen(true);\n      } else {\n        console.log(r.error_message);\n      }\n    }).catch(e => console.log(e));\n  };\n  const arr = [...Array(meme.box_count).keys()].map(i => i + 1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      style: {\n        right: 0,\n        left: 0,\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        rowSpacing: 1,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: meme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          style: {\n            padding: \"2%\"\n          },\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            height: 350,\n            src: meme.url,\n            alt: meme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          style: {\n            padding: \"2%\"\n          },\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: arr.map(field => /*#__PURE__*/_jsxDEV(TextField, {\n              color: \"secondary\",\n              style: {\n                padding: \"2%\"\n              },\n              id: \"text-\" + field,\n              label: \"Enter text #\" + field,\n              variant: \"outlined\",\n              fullWidth: true,\n              onInput: setForm(`boxes[${field - 1}][text]`)\n            }, field, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: generateMeme,\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), generatedMeme !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              handleClose: handleClose,\n              url: generatedMeme,\n              open: open\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: console.log(\"meme genarated\")\n            }, void 0, false)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CreatePage, \"R3glboqkO6smpbdTb1byh5CGOm0=\", false, function () {\n  return [useLocation];\n});\n_c = CreatePage;\nconst createMeme = async data => {\n  try {\n    return await axios.post(\"https://api.imgflip.com/caption_image\", data, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(r => r.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport default CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Grid","Typography","TextField","Button","Download","axios","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","fonts","value","label","CreatePage","_s","_location$state","location","meme","state","generatedMeme","setGeneratedMeme","open","setOpen","textBoxes","setTextBoxes","handleClose","formData","FormData","append","id","changeForm","key","event","target","setForm","generateMeme","console","log","createMeme","then","r","success","data","url","error_message","catch","e","arr","Array","box_count","keys","map","i","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","right","left","margin","container","direction","alignItems","rowSpacing","justify","item","xs","align","variant","name","padding","height","src","alt","field","color","fullWidth","onInput","onClick","_c","post","headers","err","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/React Django Meme Genarator/React-Django-Meme-Genarator/Frontend/src/pages/Createpage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useLocation} from \"react-router-dom\"\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Download from \"../components/Download\";\r\nimport axios from 'axios';\r\nimport Header from \"../components/Header\";\r\n\r\nconst fonts = [\r\n    {\r\n        value: 'impact',\r\n        label: 'impact',\r\n    },\r\n    {\r\n        value: 'arial',\r\n        label: 'arial',\r\n    },\r\n];\r\n\r\nfunction CreatePage() {\r\n    const location = useLocation();\r\n    const meme = location.state?.meme;\r\n    const [generatedMeme, setGeneratedMeme] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [textBoxes, setTextBoxes] = useState({});\r\n\r\n    const handleClose = () => {\r\n        setOpen(!open);\r\n    };\r\n    let formData = new FormData();\r\n    formData.append(\"template_id\", meme.id);\r\n    formData.append(\"username\", \"omtank22\");\r\n    formData.append(\"password\", \"imgflipp\");\r\n    const changeForm = (key) => (event) => {\r\n            setTextBoxes({\r\n                ...textBoxes, [key]: event.target.value,\r\n            });\r\n    };\r\n    const setForm = (key) =>  (event) => {\r\n            setTextBoxes({\r\n                ...textBoxes, [key]: event.target.value,\r\n            });\r\n    };\r\n    const generateMeme = () => {\r\n        // formData.set(\"font\", font);\r\n        for (const key in textBoxes) {\r\n            console.log(key, textBoxes[key]);\r\n            formData.append(key, textBoxes[key]);\r\n        }\r\n        createMeme(formData).then(r => {\r\n                if (r.success === true) {\r\n                    setGeneratedMeme(r.data.url);\r\n                    setOpen(true);\r\n\r\n                } else {\r\n                    console.log(r.error_message)\r\n                }\r\n            }\r\n        ).catch(e => console.log(e));\r\n    };\r\n    const arr = [...Array(meme.box_count).keys()].map(i => i + 1);\r\n\r\n    return (\r\n        <>\r\n         <Header/>\r\n         <br />\r\n        <div className=\"content\" style={{right: 0, left: 0, margin: \"auto\"}}>\r\n            <Grid container\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  rowSpacing={1}\r\n                  justify=\"center\">\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Typography variant={\"h4\"}>{meme.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{padding: \"2%\"}} align=\"center\">\r\n                    <img height={350} src={meme.url} alt={meme.name}/>\r\n                </Grid>\r\n                <Grid item xs={4} style={{padding: \"2%\"}} align=\"center\">\r\n                    <div>\r\n                        {arr.map(field => (\r\n                            <TextField\r\n                            color=\"secondary\"\r\n                            style={{padding: \"2%\"}}\r\n                            key={field}\r\n                            id={\"text-\" + field}\r\n                            label={\"Enter text #\" + field}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onInput={setForm(`boxes[${field-1}][text]`)}\r\n                            />\r\n                            ))}\r\n                    </div>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={generateMeme}>Generate</Button>\r\n                    {generatedMeme !== \"\" ?\r\n                        <>\r\n                        <Download handleClose={handleClose} url={generatedMeme} open={open} />\r\n                        <>{console.log(\"meme genarated\")}</>\r\n                        </>\r\n                        : <></>}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n}\r\nconst createMeme = async (data) => {\r\n    try {\r\n        return await axios.post(\"https://api.imgflip.com/caption_image\", data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(r => r.data)\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n};\r\nexport default CreatePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
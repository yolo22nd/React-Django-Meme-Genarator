{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\React Django Meme Genarator\\\\React-Django-Meme-Genarator\\\\Frontend\\\\src\\\\pages\\\\Userpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../context/AuthContext';\nimport NestedGrid from '../components/NestedGrid';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  let [memes, setMemes] = useState([]);\n  let {\n    authTokens,\n    logOutUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    getMemes();\n  }, []);\n  let getMemes = async () => {\n    console.log(\"fetching response\");\n    let response = await fetch('http://127.0.0.1:8000/api/memes/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    console.log(\"response fetched\");\n    let data = await response.json();\n    console.log(\"data set\");\n    console.log(data);\n    if (response.status === 200) {\n      setMemes(data);\n      console.log('memes set');\n    } else if (response.statusText === 'Unauthorized') {\n      logOutUser();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NestedGrid, {\n        memes: memes,\n        saved: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UserPage, \"XyxCmbJVvPMC/KMpPhJxUjsElNw=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","NestedGrid","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPage","_s","memes","setMemes","authTokens","logOutUser","getMemes","console","log","response","fetch","method","headers","String","access","data","json","status","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","saved","_c","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/React Django Meme Genarator/React-Django-Meme-Genarator/Frontend/src/pages/Userpage.js"],"sourcesContent":["import React, { useState,useEffect, useContext } from 'react'\r\nimport AuthContext from '../context/AuthContext'\r\nimport NestedGrid from '../components/NestedGrid' \r\nimport Header from '../components/Header'\r\n\r\nconst UserPage = () => {\r\n  let [memes, setMemes] = useState([])\r\n  let {authTokens,logOutUser} = useContext(AuthContext)\r\n\r\n  useEffect(()=> {\r\n    getMemes()\r\n  }, [])\r\n\r\n  let getMemes = async()=>{\r\n    console.log(\"fetching response\")\r\n    let response = await fetch('http://127.0.0.1:8000/api/memes/', {\r\n          method:'GET',\r\n          headers:{\r\n            'Content-Type':'application/json',\r\n            'Authorization':'Bearer '+String(authTokens.access),\r\n          }\r\n    })\r\n\r\n    console.log(\"response fetched\")\r\n    let data = await response.json()\r\n    console.log(\"data set\")\r\n    console.log(data)\r\n    if (response.status === 200) {\r\n      setMemes(data);\r\n      console.log('memes set')\r\n  } else if (response.statusText === 'Unauthorized'){\r\n    logOutUser()\r\n  }  \r\n}\r\n\r\n  return (\r\n    <>\r\n    <Header/>\r\n    <br />\r\n    <div>        \r\n          <NestedGrid memes={memes} saved={true} />\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default UserPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7D,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI;IAACc,UAAU;IAACC;EAAU,CAAC,GAAGb,UAAU,CAACC,WAAW,CAAC;EAErDF,SAAS,CAAC,MAAK;IACbe,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,QAAQ,GAAG,MAAAA,CAAA,KAAS;IACtBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MACzDC,MAAM,EAAC,KAAK;MACZC,OAAO,EAAC;QACN,cAAc,EAAC,kBAAkB;QACjC,eAAe,EAAC,SAAS,GAACC,MAAM,CAACT,UAAU,CAACU,MAAM;MACpD;IACN,CAAC,CAAC;IAEFP,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,IAAIO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAChCT,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;IACjB,IAAIN,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MAC3Bd,QAAQ,CAACY,IAAI,CAAC;MACdR,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5B,CAAC,MAAM,IAAIC,QAAQ,CAACS,UAAU,KAAK,cAAc,EAAC;MAChDb,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAEC,oBACER,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACAtB,OAAA,CAACF,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACT1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN1B,OAAA;MAAAsB,QAAA,eACMtB,OAAA,CAACH,UAAU;QAACQ,KAAK,EAAEA,KAAM;QAACsB,KAAK,EAAE;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA,eACJ,CAAC;AAEP,CAAC;AAAAtB,EAAA,CAvCKD,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
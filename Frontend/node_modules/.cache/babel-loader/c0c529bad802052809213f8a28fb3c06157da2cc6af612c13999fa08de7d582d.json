{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\React Django Meme Genarator\\\\React-Django-Meme-Genarator\\\\Frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  let loginUser = async (username, password) => {\n    console.log(\"form submitted\");\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    console.log('data:', data);\n    // console.log('response:', response)\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      console.log(user);\n      navigate('/');\n    } else {\n      alert(\"something went wrong?\");\n    }\n  };\n  let registerUser = async (username, password) => {\n    console.log(\"form submitted\");\n    let response = await fetch('http://127.0.0.1:8000/api/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    let data = await response.json();\n    console.log('data:', data);\n    if (response.status === 201) {\n      console.log(\"User registered successfully\");\n      navigate('/login');\n    } else {\n      alert(\"something went wrong?\");\n    }\n  };\n  let updateToken = async e => {\n    setLoading(true); // Set loading to true at the start of the function\n    console.log(\"update token called\");\n    let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'refresh': authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logOutUser();\n    }\n    setLoading(false); // Set loading back to false once the update is complete\n  };\n\n  let logOutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate('/login');\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    registerUser: registerUser,\n    logOutUser: logOutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Provider value={{'name':'admin'}}>\n    _jsxDEV(AuthContext.Provider, {\n      value: contextData,\n      children: loading ? null : children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthProvider, \"95W75iYVOGGHqc7XkJeD/fxv0WY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jwtDecode","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","username","password","console","log","response","fetch","method","headers","body","stringify","data","json","status","access","setItem","alert","registerUser","updateToken","e","refresh","logOutUser","removeItem","contextData","fourMinutes","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/React Django Meme Genarator/React-Django-Meme-Genarator/Frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext;\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    \r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null)\r\n    let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(localStorage.getItem('authTokens')) : null)\r\n    let [loading, setLoading]= useState(false)\r\n\r\n    const navigate = useNavigate() \r\n\r\n    let loginUser = async (username, password) => {\r\n        console.log(\"form submitted\")\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({username, password})\r\n        })\r\n        let data = await response.json()\r\n        console.log('data:', data)\r\n        // console.log('response:', response)\r\n\r\n        if(response.status ===200){\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n\r\n            localStorage.setItem('authTokens',JSON.stringify(data))\r\n            console.log(user)\r\n            navigate('/')\r\n        }else{\r\n            alert(\"something went wrong?\")\r\n        }\r\n    }\r\n\r\n    let registerUser = async (username, password) => {\r\n        console.log(\"form submitted\")\r\n        let response = await fetch('http://127.0.0.1:8000/api/register/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({username, password})\r\n        })\r\n        let data = await response.json()\r\n        console.log('data:', data)\r\n\r\n        if(response.status ===201){\r\n            console.log(\"User registered successfully\")\r\n            navigate('/login')\r\n        }else{\r\n            alert(\"something went wrong?\")\r\n        }\r\n    }\r\n\r\n\r\n    let updateToken = async(e) => {\r\n        setLoading(true)  // Set loading to true at the start of the function\r\n        console.log(\"update token called\")\r\n        let response = await fetch('http://127.0.0.1:8000/api/token/refresh/',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({'refresh':authTokens?.refresh})\r\n        })\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem('authTokens',JSON.stringify(data))\r\n            \r\n        }else{\r\n            logOutUser()\r\n        }\r\n        setLoading(false)  // Set loading back to false once the update is complete\r\n    }\r\n\r\n\r\n\r\n    let logOutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem(\"authTokens\")\r\n        navigate('/login')\r\n    }\r\n\r\n    let contextData = {\r\n        user:user,\r\n        authTokens:authTokens,\r\n        loginUser:loginUser,\r\n        registerUser:registerUser,\r\n        logOutUser:logOutUser,\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n        if (loading) {\r\n            updateToken()\r\n        }\r\n        let fourMinutes = 1000 * 60 * 4\r\n        let interval = setInterval(()=> {\r\n            if (authTokens) {\r\n                updateToken()\r\n            }\r\n        }, fourMinutes)\r\n\r\n        return ()=> clearInterval(interval)\r\n\r\n    }, [authTokens, loading])\r\n\r\n    return(\r\n        // <AuthContext.Provider value={{'name':'admin'}}>\r\n        <AuthContext.Provider value={contextData}>\r\n            {loading? null: children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
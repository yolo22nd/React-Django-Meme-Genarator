{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omtan\\\\OneDrive\\\\Desktop\\\\JS\\\\meme_generator\\\\src\\\\components\\\\Download.js\",\n  _s = $RefreshSig$();\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport FileSaver from \"file-saver\";\nimport AuthContext from '../context/AuthContext';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Download({\n  handleClose,\n  url,\n  open,\n  saved\n}) {\n  _s();\n  const navigate = useNavigate();\n  let {\n    authTokens,\n    logOutUser\n  } = useContext(AuthContext);\n  let [isSaved, setIsSaved] = useState(saved);\n  const saveManual = () => {\n    FileSaver.saveAs(url, \"meme.jpg\");\n  };\n  let save = async () => {\n    console.log(\"posting meme\");\n    let response = await fetch('http://127.0.0.1:8000/api/memes/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      },\n      body: JSON.stringify({\n        url: url\n      })\n    });\n    console.log(response);\n    setIsSaved(true);\n    navigate('/', {\n      state: {\n        saved: saved\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    open: open,\n    onBackdropClick: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      align: \"center\",\n      children: \"Generated Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url,\n      height: 350,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      style: {\n        alignSelf: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: saveManual,\n        children: \"Download Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), !isSaved && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: save,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Download, \"UNBP1HyyXN0pNRkKh8YtsntA3ko=\", false, function () {\n  return [useNavigate];\n});\n_c = Download;\nexport default Download;\nvar _c;\n$RefreshReg$(_c, \"Download\");","map":{"version":3,"names":["DialogTitle","DialogActions","Button","Dialog","React","useEffect","useState","useContext","FileSaver","AuthContext","useNavigate","jsxDEV","_jsxDEV","Download","handleClose","url","open","saved","_s","navigate","authTokens","logOutUser","isSaved","setIsSaved","saveManual","saveAs","save","console","log","response","fetch","method","headers","String","access","body","JSON","stringify","state","onClose","onBackdropClick","children","align","fileName","_jsxFileName","lineNumber","columnNumber","src","height","alt","style","alignSelf","variant","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/omtan/OneDrive/Desktop/JS/meme_generator/src/components/Download.js"],"sourcesContent":["import DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport FileSaver from \"file-saver\";\r\nimport AuthContext from '../context/AuthContext'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Download({handleClose, url, open, saved}) {\r\n    const navigate = useNavigate()\r\n    let {authTokens,logOutUser} = useContext(AuthContext)\r\n    let [isSaved,setIsSaved]= useState(saved)\r\n\r\n    const saveManual = () => {\r\n        FileSaver.saveAs(url, \"meme.jpg\");\r\n    };\r\n\r\n    let save = async()=>{\r\n        console.log(\"posting meme\")\r\n        let response = await fetch('http://127.0.0.1:8000/api/memes/', {\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+String(authTokens.access),\r\n            },\r\n            body: JSON.stringify({\r\n                url:url\r\n            }),\r\n        })\r\n        console.log(response)\r\n        setIsSaved(true)\r\n\r\n        navigate('/',{state:{saved:saved}})\r\n        \r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open} onBackdropClick={handleClose}>\r\n            <DialogTitle align=\"center\">Generated Meme</DialogTitle>\r\n            <img src={url} height={350} alt=\"\"/>\r\n            <DialogActions style={{alignSelf:\"center\"}} >\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={saveManual}>Download Meme</Button>\r\n\r\n                {!isSaved && (\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={save}>Save</Button>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\nexport default Download\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}